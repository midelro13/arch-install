#!/bin/bash
# NOTE: Press CTRL + L to clear the terminal at any point.

# Setting The Keyboard Layout (Default = English US)
# Listing Keyboard Layouts With:
ls /usr/share/kbd/keymaps/**/*.map.gz
# To Modify The Layout:
loadkeys "keymap you want"    # Example = loadkeys es    (for Spanish standard layout)

# Connecting To The Internet
# To Ensure Network Interface Is Listed And Enabled Use:
ip link
# If using Ethernet Test Connection With:
ping archlinux.org (CTRL + C to Stop)
# If using Wi-Fi Connect With IWCTL:
iwctl (To start the service)
device list (To know the name of the station)
station "name of your station" scan (To scan for networks) Example = station wlan0 scan
station "name of your station" get-networks (To list available networks) Example = station wlan0 get-networks
station "name of your station" connect "your WiFi name" (To connect to your Wifi) Example = station wlan0 connect Movistar_Router_1010
# Enter password when prompted 
exit (To exit IWCTL)
# Test Your WiFi Connection With:
ping archlinux.org (CTRL + C to Stop)

# Partitioning The Disk
cfdisk (To use the tool to edit partitions)
# Important Note: Your Disk Can have Different Names, In This Example We Are Going To Use The Name /dev/sda but yours could be anything as /dev/...
# Important Note: Ensure You Are Using The Correct Disk If You Have Multiple Drives, The Bootable Arch USB Will Show Up While Using "lsblk" Command But Not With "cfdisk"
# Now With Up Down Arrow Keys Select The Partition You Want To Delete And Use Left Right Arrows To Select "Delete" And Hit Enter, Repeat Until Done
# Select "New" And Then Delete Text And Write "+250M" And Hit Enter, Select The New Partition And Select "Type" And Hit Enter Then Select "EFI System"
# Select "New" And Then Delete Text And Write "+(you RAM size +2GB)" Example on 8GB RAM System = +10GB, Select The New Partition And Select "Type" And Then Hit Enter, Then Select "Linux Swap"
# Select "New" And Then Hit Enter To Select The Remaning Space Then Select "Type" And Hit Enter Then Select "Linux Filesystem"
# Select "Write" And When Prompted Write "Yes" And Hit Enter Then Select "Quit" And Press CTRL+L To Clear The Terminal
# To Check If The Partition Table Is Correct: 
lsblk

# Mounting Folders Into Partitions
mount /dev/sda3 /mnt                 (To mount /mnt folder into the main partition)
mkdir -p /mnt/boot/efi               (Making the neccesary folders to mount EFI folder into EFI partition)
mount /dev/sda1 /mnt/boot/efi        (Mounting the new efi folder into the EFI partition)
mkswap /dev/sda2                     (Making the swap partition as swap) (You can also make a Swap File With The Benefit Of Editing The Size At Anytime)
swapon /dev/sda2                     (Activating the swap partition)

# Downloading & Installing Base Packages
pacstrap /mnt base linux linux-firmware git vim nano intel-ucode (or amd-ucode if AMD CPU)

# Generating FSTAB
genfstab -U /mnt >> /mnt/etc/fstab

# Moving To Our Arch Installation
arch-chroot /mnt

# Downloading Private Repository
git clone https://github.com/midelrocks/arch-basic      (To clone the repository to our installation)
cd arch-install                                         (To go to the folder downloaded)
ls -l                                                   (To list the files in the folder)
# To Edit Any Script Use: nano "name of the script" Example = nano install-uefi.sh
chmod +x base-uefi.sh                       # To Give The File Execution Permissions
cd                                          # To Exit The Private Repository Folder
./arch-basic/base-uefi.sh      # To Execute The Bash File
# If At Running Last Command It Says "File Not Found" Do This: 
# exit
# arch-chroot /mnt
# Now Try ./arch-basic/base-uefi.sh again

# Enabling OS Prober To Let Grub Detect Other OS (Only For Dual OS Installations)
nano /etc/default/grub
# Go To The End Of The File To Inster New Line:
GRUB_DISABLE_OS_PROBER=false
# CTRL+O To Save + CTRL+X To Exit
grub-mkconfig -o /boot/grub/grub.cfg #To Regen Grub Config

# To Exit chroot Enviroment
exit

# To Umount /mnt
umount -a

# Time To Reboot
reboot

# After Reboot
# Login With User And Password (Lines 94 to 96 In This Doc)

# Only For WiFi Users:
nmtui
# Activate A Connection > Select Your Wifi > Set Password & Connect

# Test Your Connection
sudo pacman -Syy 

# Copy Our Private Repository From Root Folder To Home Folder So We Can Use It
cp -r /arch-basic .                 # Use "ls -l" and check for 'arch-install' is listed
cd arch-basic                       # To Move To The Folder Location
ls -l                               # To List The Files Inside The Folder
# To Edit Any Script Use: nano "name of the script" Example = nano install-uefi.sh
chmod +x xfce.sh                    # To Give The File Execution Permissions (Just Change xfce for kde or gnome in case you want anotherone)
./xfce.sh                           # To Execute The Bash File (Just Change xfce for kde or gnome in case you want anotherone)

# Reboot Time
reboot




















